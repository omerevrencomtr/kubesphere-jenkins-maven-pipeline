pipeline {
    agent {
        node {
            label 'maven'
        }
    }

    environment {
        APP_NAME = 'devops-maven-sample'
        DOCKER_NAMESPACE = 'lamots'
        BRANCH_NAME = 'dev'

        DOCKER_REGISTRY = 'docker-registry.miateknoloji.io'
        DOCKER_CREDENTIAL_ID = 'nexus-admin'

        SONAR_CREDENTIAL_ID = 'sonar-token'
        KUBECONFIG_CREDENTIAL_ID = 'kubeconfig'


    }
    stages {

        stage('checkout') {
            steps {
                container('maven') {
                    sh 'git checkout'
                }
            }
        }

        stage('unit test') {
            steps {
                container('maven') {
                    sh 'mvn clean test'
                }
            }
        }

        stage('sonarqube analysis') {
            steps {
                container('maven') {
                    withCredentials([string(credentialsId: "$SONAR_CREDENTIAL_ID", variable: 'SONAR_TOKEN')]) {
                        withSonarQubeEnv('sonar') {
                            sh "mvn sonar:sonar -Dsonar.login=$SONAR_TOKEN"
                        }
                    }
                }
            }
        }

        stage('build & push') {
            steps {
                script {
                    container('maven') {
                        sh 'mvn -Dmaven.test.skip=true clean package'
                        sh 'podman build -f Dockerfile-online -t $DOCKER_REGISTRY/$DOCKER_NAMESPACE/$BRANCH_NAME:$BUILD_NUMBER .'
                        withCredentials([usernamePassword(passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME', credentialsId: "$DOCKER_CREDENTIAL_ID",)]) {
                            sh 'echo "$DOCKER_PASSWORD" | podman login $DOCKER_REGISTRY -u "$DOCKER_USERNAME" --password-stdin'
                            sh 'podman push $DOCKER_REGISTRY/$DOCKER_NAMESPACE/$BRANCH_NAME:$BUILD_NUMBER'
                        }
                    }
                }
            }
        }

        stage('push latest') {
            steps {
                container('maven') {
                    sh 'podman tag  $DOCKER_REGISTRY/$DOCKER_NAMESPACE/$BRANCH_NAME:$BUILD_NUMBER $DOCKER_REGISTRY/$DOCKER_NAMESPACE/$BRANCH_NAME:latest '
                    sh 'podman push  $DOCKER_REGISTRY/$DOCKER_NAMESPACE/$BRANCH_NAME:latest '
                }
            }
        }
        stage('deploy to dev') {
            steps {
                container('maven') {
                    withCredentials([
                            kubeconfigFile(
                                    credentialsId: env.KUBECONFIG_CREDENTIAL_ID,
                                    variable: 'KUBECONFIG')
                    ]) {
                        sh 'envsubst < deploy/deploy.yaml | kubectl apply -f -'
                    }
                }
            }
        }
    }
}