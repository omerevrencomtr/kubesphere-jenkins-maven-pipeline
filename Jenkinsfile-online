pipeline {
    agent {
        node {
            label 'maven'
        }

    }
    environment {
        DOCKER_CREDENTIAL_ID = 'nexus-admin'
        PROD_KUBECONFIG_CREDENTIAL_ID = 'kubeconfig'
        TEST_KUBECONFIG_CREDENTIAL_ID = 'kubeconfig'
        DEV_KUBECONFIG_CREDENTIAL_ID = 'kubeconfig'

        REGISTRY = 'https://docker-registry.miateknoloji.io'
        DOCKERHUB_NAMESPACE = 'omerevrencomtr'
        APP_NAME = 'devops-maven-sample'
        SONAR_CREDENTIAL_ID = 'sonar-token'
        IMAGE_NAME = 'omerevrencomtr/lamots'
        BUILD_ARGS = "-f Dockerfile-online . --network host"
        DOCKER_REGISTRY = 'https://docker-registry.miateknoloji.io'
        REGISTRY_CREDENTIAL = 'nexus-admin'
    }
    stages {
        stage('Initialize')
                {
                    def dockerHome = tool 'MyDocker'
                    def mavenHome  = tool 'MyMaven'
                    env.PATH = "${dockerHome}/bin:${mavenHome}/bin:${env.PATH}"
                }
        stage('build & push') {
            steps {
                script {
                    container('maven') {
                        sh '/usr/bin/docker --version'
                        docker.withRegistry(DOCKER_REGISTRY, REGISTRY_CREDENTIAL) {
                            dockerImage = docker.build(IMAGE_NAME, BUILD_ARGS)
                        }

                    }
                }
            }
        }


    }
}